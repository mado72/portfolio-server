{
  "swagger": "2.0",
  "info": {
    "title": "Portfolio API",
    "description": "API for getting asset quotes.",
    "version": "0.0.1-SNAPSHOT"
  },
  "produces": ["application/json"],
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/health": {
      "get": {
        "tags": ["health-api"],
        "summary": "Get Health Check",
        "description": "Health check for the API",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "HealthApi"
      }
    },
    "/yahoo/price": {
      "get": {
        "tags": ["yahoo-api"],
        "summary": "Get price for a asset ticker",
        "description": "It gets from yahoo finance the actual price of a ticker defined at path variable",
        "operationId": "getYahooPriceTicker",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "YahooApi"
      }
    },
    "/yahoo/historical/{startDate}/{endDate}": {
      "get": {
        "tags": ["yahoo-api"],
        "summary": "Get historical data for a asset ticker",
        "description": "Fetch monthly historical data for a set of assets.",
        "operationId": "getMonthlyHistoricalData",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "YahooApi"
      }
    },
    "/bonds/all": {
      "get": {
        "tags": ["bonds-api"],
        "summary": "Get all bonds",
        "description": "Get all bonds",
        "operationId": "getAllBonds",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "ThreasureApi"
      }
    },
    "/bonds/filter": {
      "get": {
        "tags": ["bonds-api"],
        "summary": "Get filtered bonds",
        "description": "Get filtered bonds.",
        "operationId": "getBondsById",
        "parameters": [
          {
            "name": "bonds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "ThreasureApi"
      }
    }
  },
  "definitions": {
    "Error": {
      "required": ["code", "message"],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "x-express-middleware": [
    {
      "name": "cors",
      "config": {
        "origin": "http://localhost:4200",
        "methods": ["GET", "POST", "PUT", "DELETE", "OPTIONS"],
        "allowedHeaders": [
          "Content-Type",
          "Authorization",
          "Origin",
          "X-Requested-With",
          "Accept"
        ]
      }
    }
  ]
}
